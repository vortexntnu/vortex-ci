name: Reusable Coverage Build
on:
  workflow_call:
    inputs:
      ros_distro:
        description: 'ROS2 distribution name'
        required: true
        type: string
      debug:
        description: 'Add debug output'
        type: boolean
        default: false
      repos_file:
        description: 'Optional .repos file or filename to use. If not provided, defaults to <repo_name>.<ros_distro>.repos'
        required: false
        type: string
    secrets:
      CODECOV_TOKEN:
        description: 'Token for Codecov'
        required: true

jobs:
  coverage:
    name: coverage build ${{ inputs.ros_distro }}
    runs-on: ubuntu-latest
    container: ghcr.io/sloretz/ros:${{ inputs.ros_distro }}-ros-base
    defaults:
      run:
        shell: bash
    steps:
      - name: "Determine prerequisites"
        id: prereq
        run: |
          command -v sudo >/dev/null 2>&1 || (apt update && apt install -y sudo)
          sudo apt update
          echo "need_node=$(command -v node >/dev/null 2>&1 && echo 0 || echo 1)" >> $GITHUB_OUTPUT
          echo "need_ros2=$(if [ -d \"/opt/ros/${{ inputs.ros_distro }}\" ]; then echo 0; else echo 1; fi)" >> $GITHUB_OUTPUT

      # Needed for GitHub Actions, and only if a bare Ubuntu image is used
      - uses: actions/setup-node@v4
        if: ${{ steps.prereq.outputs.need_node == '1' && !env.ACT }}
      - name: Install node
        if: ${{ steps.prereq.outputs.need_node == '1' && env.ACT }}
        run: |
          sudo apt install -y curl
          curl -sS https://webi.sh/node | sh
          echo ~/.local/opt/node/bin >> $GITHUB_PATH

      # Overwrite ROS distro with testing
      - uses: ros-tooling/setup-ros@0.7.9
        with:
          use-ros2-testing: true

      - name: Install coverage tools
        run: |
          set -v
          sudo apt-get install -qq lcov python3-colcon-lcov-result
          sudo apt-get install -qq python3-colcon-coveragepy-result python3-pytest-cov python3-pip python3-venv
          python3 -m venv ~/.venv --system-site-packages
          source ~/.venv/bin/activate
          python3 -m pip install coverage --upgrade
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Test coverage tools
        if: ${{ inputs.debug }}
        run: |
          pwd
          which coverage || true
          python3 -m coverage --version || true
          coverage --version || true
          source ~/.venv/bin/activate || true
          python3 -m coverage --version || true
          coverage --version || true
          which coverage || true
          ls ~/.venv/bin || true

      - uses: actions/checkout@v4

      - id: package_list_action
        uses: ros-controls/ros2_control_ci/.github/actions/set-package-list@master

      - uses: ros-tooling/action-ros-ci@0.3.16
        with:
          target-ros2-distro: ${{ inputs.ros_distro }}
          import-token: ${{ secrets.GITHUB_TOKEN }}
          # Build all packages listed here
          package-name: ${{ steps.package_list_action.outputs.package_list }}
          vcs-repo-file-url: ${{ inputs.repos_file }}
          colcon-defaults: |
            {
              "build": {
                "mixin": ["coverage-gcc", "coverage-pytest"]
              },
              "test": {
                "mixin": ["coverage-pytest"]
              }
            }
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml

      - name: Test coverage tools (post-build)
        if: ${{ inputs.debug }}
        run: |
          pwd
          which coverage || true
          python3 -m coverage --version || true
          coverage --version || true
          source ~/.venv/bin/activate || true
          python3 -m coverage --version || true
          coverage --version || true
          which coverage || true
          ls ~/.venv/bin || true

      - name: Search for .coverage files and convert them
        continue-on-error: true
        run: |
          echo "Listing total_coverage.info files:"
          find ros_ws -name total_coverage.info
          echo "Listing .coverage files:"
          find ros_ws -name ".coverage"
          source ~/.venv/bin/activate
          for coverage_file in $(find ros_ws -name ".coverage"); do
            output_file="${coverage_file%/.coverage}/coverage.xml"
            echo "Processing $coverage_file -> $output_file"
            if [ ! -f "$output_file" ]; then
              python3 -m coverage xml --data-file "$coverage_file" -o "$output_file"
            else
              echo "$output_file already exists"
            fi
          done

      - name: List generated XML files
        run: |
          echo "Generated coverage.xml files:"
          find ros_ws -name "coverage.xml"
          echo "Contents of first coverage.xml (first 50 lines):"
          first_xml=$(find ros_ws -name "coverage.xml" | head -n 1)
          if [ -n "$first_xml" ]; then
            head -n 50 "$first_xml"
          else
            echo "No coverage.xml found"
          fi

      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: actions/upload-artifact@v4.6.0
        with:
          name: colcon-logs-coverage-${{ inputs.ros_distro }}
          path: ros_ws/log

      - name: Upload coverage debugging artifacts
        if: ${{ inputs.debug }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-debug-artifacts
          path: |
            ros_ws/coveragepy/coverage.xml
            ros_ws/build/velocity_controller_lqr/pytest_cov/test_velocity_controller_lqr/coverage.xml
