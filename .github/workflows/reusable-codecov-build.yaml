name: 
on:
    workflow_call:
        inputs:
            os_name:
                description: "Operating System to run the workflow on"
                required: false
                default: "ubuntu-22.04"
                type: string
            ros2_distro:
                description: "ROS 2 distribution to use"
                required: true
                type: string
            ref:
                description: "Git branch or tag to checkout"
                default: ${{ github.event.repository.default_branch }}
                required: false
                type: string
            python_version:
                description: "Python version to use"
                required: true
                type: string
            vcs_repo_file_url:
                description: "URL to the vcs repositories file"
                required: true
                type: string

jobs:
    codecov:
        runs-on: ${{ inputs.os_name }}
        steps:
        - uses: actions/checkout@v4
        - uses: ros-tooling/setup-ros@v0.7
          with:
            required-ros-distributions: ${{ inputs.ros2_distro }}
        - uses: ros-tooling/action-ros-ci@v0.3
          with:
            target-ros2-distro: ${{ inputs.ros2_distro }}
            vcs-repo-file-url: ${{ inputs.vcs_repo_file_url }}
            colcon-defaults: |
                {
                "build": {
                    "mixin": ["coverage-gcc", "coverage-pytest"]
                },
                "test": {
                    "mixin": ["coverage-pytest"]
                }
                }
            colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
        - uses: codecov/codecov-action@v4
          with:
              fail_ci_if_error: true
              flags: unittests
              name: codecov-umbrella
              token: ${{ secrets.CODECOV_TOKEN }}
        - uses: actions/upload-artifact@v4.4.3
          with:
            name: colcon-logs-coverage-${{ inputs.ros2_distro }}
            path: ${{ steps.action_ros_ci_step.outputs.ros-workspace-directory-name }}/log