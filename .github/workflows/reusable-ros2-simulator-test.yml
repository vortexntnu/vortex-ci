name: Reusable ROS 2 Stonefish Simulator Test
on:
  workflow_call:
    inputs:
      os:
        description: "Operating System to run the workflow on"
        required: false
        default: "ubuntu-22.04"
        type: string
      ros_distro:
        description: "ROS 2 distribution to use"
        required: false
        default: "humble"
        type: string
      vcs_repos_file:
        description: "Path to the .repos file for dependencies"
        required: false
        default: "*.repos"
        type: string
      setup_script:
        description: "Script to run before installing dependencies"
        required: false
        default: ""
        type: string
      test_script:
        description: "Test script to execute"
        required: true
        type: string
jobs:
  build-and-test:
    runs-on: ${{ inputs.os }}
    container:
      image: ros:${{ inputs.ros_distro }}-ros-base
    env:
      WORKSPACE: ~/ros2_ws
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup ROS 2
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ inputs.ros_distro }}
      - name: Import dependencies from .repos file
        if: inputs.vcs_repos_file != ''
        run: |
          mkdir -p ~/ros2_ws/src
          vcs import ~/ros2_ws/src < ${{ inputs.vcs_repos_file }}
          rosdep update
          rosdep install --from-paths ~/ros2_ws/src --ignore-src -r -y
      - name: Run setup script
        if: inputs.setup_script != ''
        run: |
          if [ -f "${{ inputs.setup_script }}" ]; then
            chmod +x "${{ inputs.setup_script }}"
            "${{ inputs.setup_script }}"
          else
            echo "Provided script does not exist: ${{ inputs.setup_script }}"
          fi
      - name: Run Test Script
        if: inputs.test_script != ''
        run: |
          if [ -f "${{ inputs.test_script }}" ]; then
            chmod +x "${{ inputs.test_script }}"
            "${{ inputs.test_script }}"
          else
            echo "Provided script does not exist: ${{ inputs.test_script }}"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: colcon-logs
          path: ~/ros2_ws/log
        if: failure()
