name: Reusable ROS 2 Simulator Test
on:
  workflow_call:
    inputs:
      os:
        description: "Operating System to run the workflow on"
        required: false
        default: "ubuntu-22.04"
        type: string
      ros_distro:
        description: "ROS 2 distribution to use"
        required: false
        default: "humble"
        type: string
      vcs_repos_file:
        description: "Path to the .repos file for dependencies (relative to caller repo)"
        required: false
        default: "*.repos"
        type: string
      setup_script:
        description: "Path to the setup script to execute (relative to caller repo)"
        required: false
        default: ""
        type: string
      test_script:
        description: "Path to the test script to execute (relative to caller repo)"
        required: true
        type: string
jobs:
  build:
    runs-on: ${{ inputs.os }}
    container:
      image: ghcr.io/vortexntnu/stonefish:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      WORKSPACE: ${{ github.workspace }}/ros2_ws
      CALLER_REPO: ${{ github.workspace }}/ros2_ws/src/${{ github.event.repository.name }}
      ARTIFACT_NAME: ros2_ws_install-${{ inputs.ros_distro }}-${{ github.sha }}
    steps:
      - name: Checkout caller repository (PR code)
        uses: actions/checkout@v4
        with:
          path: ros2_ws/src/${{ github.event.repository.name }}
      - name: Setup ROS 2
        uses: ros-tooling/setup-ros@0.7.14
        with:
          required-ros-distributions: ${{ inputs.ros_distro }}
      - name: Import dependencies from .repos file
        if: inputs.vcs_repos_file != ''
        run: |
          mkdir -p $WORKSPACE/src
          mkdir -p $WORKSPACE/bags
          if [ -f "$CALLER_REPO/${{ inputs.vcs_repos_file }}" ]; then
            vcs import $WORKSPACE/src < "$CALLER_REPO/${{ inputs.vcs_repos_file }}"
            rosdep update
            rosdep install --from-paths $WORKSPACE/src --ignore-src -r -y
          else
            echo "Provided .repos file does not exist: $CALLER_REPO/${{ inputs.vcs_repos_file }}"
          fi
      - name: Run setup script
        if: inputs.setup_script != ''
        run: |
          if [ -f "$CALLER_REPO/${{ inputs.setup_script }}" ]; then
            chmod +x "$CALLER_REPO/${{ inputs.setup_script }}"
            "$CALLER_REPO/${{ inputs.setup_script }}"
          else
            echo "Provided script does not exist: $CALLER_REPO/${{ inputs.setup_script }}"
          fi
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.WORKSPACE }}/install
            ${{ env.WORKSPACE }}/bags
          retention-days: 1
          if-no-files-found: error
  test:
    needs: build
    runs-on: ${{ inputs.os }}
    container:
      image: ghcr.io/vortexntnu/stonefish:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      WORKSPACE: ${{ github.workspace }}/ros2_ws
      CALLER_REPO: ${{ github.workspace }}/ros2_ws/src/${{ github.event.repository.name }}
      ARTIFACT_NAME: ros2_ws_install-${{ inputs.ros_distro }}-${{ github.sha }}
    steps:
      - name: Checkout caller repository (to get test script)
        uses: actions/checkout@v4
        with:
          path: ros2_ws/src/${{ github.event.repository.name }}
      - name: Download built install/ artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.WORKSPACE }}
      - name: Run test script
        if: inputs.test_script != ''
        run: |
          if [ -f "$CALLER_REPO/${{ inputs.test_script }}" ]; then
            chmod +x "$CALLER_REPO/${{ inputs.test_script }}"
            "$CALLER_REPO/${{ inputs.test_script }}"
          else
            echo "Provided script does not exist: $CALLER_REPO/${{ inputs.test_script }}"
          fi
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: rosbags
          path: ${{ github.workspace }}/ros2_ws/bags
          if-no-files-found: warn
