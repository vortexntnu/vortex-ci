name: ROS Build and Clang Tidy Analysis

on:
  workflow_call:
    inputs:
      ros_distro:
        description: "ROS Distribution (e.g., humble, jazzy)"
        required: false
        default: "humble"
        type: string
      os_name:
        description: "Operating System for the build"
        required: false
        default: "ubuntu-22.04"
        type: string
      ref:
        description: "Git branch or tag to checkout"
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      vcs_repo_file_url:
        description: "URL to the vcs repositories file"
        required: false
        default: ""
        type: string
      skip_tests:
        description: "Skip running tests"
        required: false
        default: false
        type: boolean
      gcc_version:
        description: "GCC version to install"
        required: false
        default: "11"
        type: string
      clang_tidy_version:
        description: "Version of clang-tidy to use"
        required: false
        default: "18"
        type: string

jobs:
  # First Job: Build and Generate compile_commands.json
  build:
    runs-on: ${{ inputs.os_name }}
    outputs:
      workspace_dir: ${{ steps.upload_compile_commands.outputs.workspace_dir }}
    steps:
      - name: Set GCC and G++ version
        if: inputs.gcc_version != '11'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install gcc-${{ inputs.gcc_version }} g++-${{ inputs.gcc_version }} -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ inputs.gcc_version }} 60
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${{ inputs.gcc_version }} 60

      - name: Setup ROS 2 environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ inputs.ros_distro }}

      - name: Build and test ROS 2 packages
        id: ros_ci
        uses: ros-tooling/action-ros-ci@v0.3
        with:
          target-ros2-distro: ${{ inputs.ros_distro }}
          vcs-repo-file-url: ${{ inputs.vcs_repo_file_url }}
          skip-tests: ${{ inputs.skip_tests }}
          colcon-defaults: |
            {
              "build": {
                "cmake-args": [
                  "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
                ]
              }
            }

      - name: Upload compile_commands.json
        id: upload_compile_commands
        uses: actions/upload-artifact@v3
        with:
          name: compile_commands
          path: ${{ steps.ros_ci.outputs.ros-workspace-directory-name }}/build/compile_commands.json

  # Second Job: Download and Run Clang-Tidy
  clang_tidy:
    runs-on: ubuntu-latest
    needs: build  # This ensures that clang_tidy runs after the build job completes
    steps:
      - name: Download compile_commands.json
        uses: actions/download-artifact@v3
        with:
          name: compile_commands
          path: ./build  # Store in ./build where clang-tidy expects it

      - name: Install Clang-Tidy
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy-${{ inputs.clang_tidy_version }}

      - name: Run Clang-Tidy
        run: |
          find src -name '*.cpp' -o -name '*.hpp' | xargs clang-tidy-${{ inputs.clang_tidy_version }} -p build
